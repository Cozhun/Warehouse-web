version: '3.8'

services:
  app:
    build: .
    # Удаляем прямой проброс порта, так как теперь будет через Traefik
    # ports:
    #   - "3000:3000"
    environment:
      - DB_USER=postgres
      - DB_HOST=db # Важно: имя сервиса базы данных
      - DB_NAME=warehousedb
      - DB_PASSWORD=supersecretpassword # Используйте более надежный пароль
      - DB_PORT=5432
      - SESSION_SECRET=R40ydhBSVwqImThx
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Раскомментируйте следующую строку для активной разработки,
      # чтобы изменения в локальном коде отражались в контейнере.
      #- .:/usr/src/app
      - node_modules_volume:/usr/src/app/node_modules # Используем именованный volume
    networks:
      - warehouse-net
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.warehouse.rule=Host(`warehouse.cozhunhomeserver.crazedns.ru`)" # Замените на ваш домен
      - "traefik.http.routers.warehouse.entrypoints=https"
      - "traefik.http.routers.warehouse.tls=true"
      - "traefik.http.routers.warehouse.tls.certresolver=letsencrypt"
      - "traefik.http.services.warehouse.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.warehouse-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.warehouse-http.rule=Host(`warehouse.cozhunhomeserver.crazedns.ru`)"
      - "traefik.http.routers.warehouse-http.entrypoints=http"
      - "traefik.http.routers.warehouse-http.middlewares=warehouse-https-redirect"

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=warehousedb
      - POSTGRES_PASSWORD=supersecretpassword # Должен совпадать с DB_PASSWORD для app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Опционально: для доступа к БД с хост-машины
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d warehousedb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - warehouse-net

networks:
  warehouse-net:
    driver: bridge
  proxy:
    external: true

volumes:
  postgres_data: 
  node_modules_volume: